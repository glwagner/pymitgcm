Get compiler version using: gfortran --version
/usr/local/bin/gfortran
GNU Fortran (Homebrew GCC 7.1.0 --without-multilib) 7.1.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

<-- compiler version ----

running: look_for_makedepend()
 --> set MAKEDEPEND=$(TOOLSDIR)/xmakedepend

running: check_HAVE_CLOC()
gcc-7 -c genmake_tc_1.c
gfortran -fconvert=big-endian -Wunused -Wuninitialized -o genmake_tc genmake_tc_2.for genmake_tc_1.o
  HELLO WORLD   1501288134.7547691     
 --> set HAVE_CLOC='t'

running: check_HAVE_SETRLSTK()
gcc-7 -c genmake_tc_1.c
      program hello
      external setrlstk
      call setrlstk()
      end
gfortran -fconvert=big-endian -Wunused -Wuninitialized -o genmake_tc genmake_tc_2.for genmake_tc_1.o
 --> set HAVE_SETRLSTK='t'

running: check_HAVE_SIGREG()
gcc-7 -c genmake_tc_1.c
In file included from genmake_tc_1.c:6:0:
/usr/include/ucontext.h:43:2: error: #error The deprecated ucontext routines require _XOPEN_SOURCE to be defined
 #error The deprecated ucontext routines require _XOPEN_SOURCE to be defined
  ^~~~~
genmake_tc_1.c:11:44: warning: 'struct ucontext' declared inside parameter list will not be visible outside of this definition or declaration
     unsigned int sn, siginfo_t  si, struct ucontext *sc )
                                            ^~~~~~~~
      program hello
      integer anint
      common /iv/ anint
      external sigreg
      call sigreg(anint)
      end
gfortran -fconvert=big-endian -Wunused -Wuninitialized -o genmake_tc genmake_tc_2.for genmake_tc_1.o
gfortran: error: genmake_tc_1.o: No such file or directory
 --> set HAVE_SIGREG=''

running: check_HAVE_STAT()
gcc-7 -c genmake_tc_1.c
      program hello
      integer nbyte
      call tfsize(nbyte)
      print *," HELLO WORLD", nbyte
      end
gfortran -fconvert=big-endian -Wunused -Wuninitialized -o genmake_tc genmake_tc_2.for genmake_tc_1.o
 --> set HAVE_STAT='t'

running: check_netcdf_libs()
===  genmake_tnc.F  >>>
      program fgennc
#include "netcdf.inc"
      integer iret, ncid, xid
      iret = nf_create('genmake_tnc.nc', NF_CLOBBER, ncid)
      IF (iret .NE. NF_NOERR) write(*,*) NF_STRERROR(iret)
      iret = nf_def_dim(ncid, 'X', 11, xid)
      IF (iret .NE. NF_NOERR) write(*,*) NF_STRERROR(iret)
      iret = nf_close(ncid)
      IF (iret .NE. NF_NOERR) write(*,*) NF_STRERROR(iret)
      end
<<<  genmake_tnc.F  ===
cat genmake_tnc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -I/usr/local/include
gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -c genmake_tnc.for  \ 
  &&  gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -o genmake_tnc.o -L/usr/local/lib -lnetcdf -lcurl
Undefined symbols for architecture x86_64:
  "_nf_close_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_create_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_def_dim_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_strerror_", referenced from:
      _MAIN__ in genmake_tnc.o
ld: symbol(s) not found for architecture x86_64
collect2: error: ld returned 1 exit status

==> try again with added '-lnetcdf'
cat genmake_tnc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -I/usr/local/include > genmake_tnc.for \ 
 &&  gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -c genmake_tnc.for \ 
 &&  gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -o genmake_tnc genmake_tnc.o -L/usr/local/lib -lnetcdf -lcurl -lnetcdf
Undefined symbols for architecture x86_64:
  "_nf_close_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_create_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_def_dim_", referenced from:
      _MAIN__ in genmake_tnc.o
  "_nf_strerror_", referenced from:
      _MAIN__ in genmake_tnc.o
ld: symbol(s) not found for architecture x86_64
collect2: error: ld returned 1 exit status

==> try again with added '-lnetcdff -lnetcdf'
cat genmake_tnc.F |  /usr/bin/cpp -traditional -P -DWORDLENGTH=4 -DNML_TERMINATOR -DHAVE_SYSTEM -DHAVE_FDATE -DHAVE_ETIME_SBR -DHAVE_CLOC -DHAVE_SETRLSTK -DHAVE_STAT -I/usr/local/include > genmake_tnc.for \ 
 &&  gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -c genmake_tnc.for \ 
 &&  gfortran  -fconvert=big-endian -Wunused -Wuninitialized -O3 -ftree-vectorize -funroll-loops -o genmake_tnc genmake_tnc.o -L/usr/local/lib -lnetcdf -lcurl -lnetcdf
check_netcdf: successful
 --> set HAVE_NETCDF='t'

running: check_HAVE_FLUSH()
  check_HAVE_FLUSH: successful
 --> set HAVE_FLUSH='t'
